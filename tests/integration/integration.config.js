// Jest configuration for integration tests
// Generated by Context Engineering Feature Request Decomposition System

module.exports = {
  displayName: 'Integration Tests',
  testMatch: [
    '<rootDir>/tests/integration/**/*.test.js'
  ],
  testEnvironment: 'node',
  setupFilesAfterEnv: [
    '<rootDir>/tests/integration/setup.js'
  ],
  collectCoverageFrom: [
    'src/**/*.{js,ts}',
    '!src/**/*.test.{js,ts}',
    '!src/**/*.spec.{js,ts}'
  ],
  coverageDirectory: '<rootDir>/coverage/integration',
  coverageReporters: [
    'text',
    'lcov',
    'html'
  ],
  testTimeout: 30000,
  verbose: true,
  detectOpenHandles: true,
  forceExit: true,
  maxWorkers: 4,
  
  // Integration test specific settings
  globals: {
    'INTEGRATION_TEST': true,
    'TEST_TIMEOUT': 30000
  },
  
  // Module name mapping for integration tests
  moduleNameMapping: {
    '^@/(.*)$': '<rootDir>/src/$1',
    '^@tests/(.*)$': '<rootDir>/tests/$1'
  },
  
  // Transform configuration
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': 'babel-jest'
  },
  
  // Test result processor for integration tests
  testResultsProcessor: '<rootDir>/tests/integration/results-processor.js',
  
  // Custom reporters for integration tests
  reporters: [
    'default',
    [
      'jest-html-reporters',
      {
        publicPath: './coverage/integration',
        filename: 'integration-test-report.html',
        expand: true,
        hideIcon: false,
        pageTitle: 'Integration Test Report'
      }
    ]
  ],
  
  // Integration test specific environment variables
  testEnvironmentOptions: {
    NODE_ENV: 'test',
    INTEGRATION_TEST: 'true'
  }
};